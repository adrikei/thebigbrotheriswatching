library(highcharter)
library(quantmod)
y <- getSymbols("AMZN", auto.assign = FALSE)
highchart(type="stock") %>%
hc_add_series(y, type="ohlc")
install.packages(¨tidyverse¨)
install.packages("tidyverse")
highchart(type="stock") %>%
hc_add_series(y, type="ohlc")
install.packages("leaflet")
install.packages("png")
install.packages("leaflet")
install.packages("png")
install.packages("leaflet")
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
library(magrittr)
m
library(magrittr)
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
View(m)
View(m)
m
library(shiny); runApp('Desktop/VD/project/vbsd.R')
runApp('Desktop/VD/project/vbsd.R')
library(shiny); runApp('Desktop/VD/project/vbsd.R')
install.packages("maptiles")
install.packages("Maptiles")
install.packages("MapTiles")
install.packages("mapTiles")
require("leaflet")
require(shiny)
require("leaflet)
require(leaflet)
require(shiny)
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
library(shiny); runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
runApp('Desktop/VD/lab6/lab.R')
library(shiny); runApp('Desktop/NOVA/VD/project/vbsd.R')
setwd("~/Desktop/NOVA/VD/project")
library(shiny); runApp('vbsd.R')
runApp('~/Desktop/NOVA/VD/lab4/lab4.R')
runApp('vbsd.R')
df <- read.csv("csv.csv", sep = "\t", header = TRUE, stringsAsFactors = F)
which(df$name != '')
nn = which(df$name != '')
df[nn,]
df[nn, c("name", "website", "surveillance:type", "note")]
df[nn, c("name", "website", "note")]
View(df)
View(df)
df[nn, c("name", "website", "surveillance.type", "note")]
runApp('vbsd.R')
runApp('vbsd.R')
runApp('vbsd.R')
runApp('vbsd.R')
runApp('vbsd.R')
runApp('vbsd.R')
nonnull = df[nn, c("name", "website", "surveillance.type", "note")]
View(nonnull)
View(nonnull)
runApp('vbsd.R')
runApp('vbsd.R')
runApp('vbsd.R')
runApp('vbsd.R')
runApp('vbsd.R')
T and F
T & F
T && F
runApp('vbsd.R')
runApp('vbsd.R')
runApp('vbsd.R')
runApp('vbsd.R')
nn = which((df$name != '') && (df$website != ''))
nn = which((df$name != ''))
nn = which((df$website != ''))
nn = which((df$website != '') && T)
nn = which((df$name != '' && df$website != ''))
nn = which((df$name != '' & df$website != ''))
nn = which((df$name != '' & df$website != '' & df$note != ''))
nn = which(df$name != '' & df$website != '' & df$note != '')
runApp('vbsd.R')
nn = which(df$name != '' & df$website != '')
runApp('vbsd.R')
grepl("teste", 'tes')
grepl("teste", "tes")
grep("teste", 'tes')
grep("teste", 'est')
grepl("tes", 'teste')
runApp('vbsd.R')
runApp('vbsd.R')
sapply(coords$surveillance.type, function(surveillance.type) {
if(grepl('CAMERA', toupper(surveillance.type))){
"video"
} else if(grepl('DOG', toupper(surveillance.type))){
"dog"
} else if(grepl('GUARD', toupper(surveillance.type)) | grepl('POLICE', toupper(surveillance.type))){
"male"
} else if(grepl('TRAFFIC', toupper(surveillance.type))){
"traffic-light"
} else if(grepl('ALPR', toupper(surveillance.type)) | grepl('ANPR', toupper(surveillance.type))){
"camera"
} else {
"eye"
}
})
3
3
3
3
3
3
3
3
3
3
3
3
runApp('vbsd.R')
runApp('vbsd.R')
coords
sapply(coords$surveillance.type, function(surveillance.type) {
if(grepl('CAMERA', toupper(surveillance.type))){
"video"
} else if(grepl('DOG', toupper(surveillance.type))){
"dog"
} else if(grepl('GUARD', toupper(surveillance.type)) | grepl('POLICE', toupper(surveillance.type))){
"male"
} else if(grepl('TRAFFIC', toupper(surveillance.type))){
"traffic-light"
} else if(grepl('ALPR', toupper(surveillance.type)) | grepl('ANPR', toupper(surveillance.type))){
"camera"
} else {
"eye"
}
})
runApp('vbsd.R')
runApp('vbsd.R')
df_cam <- read.csv("insecam.csv", sep = ",", header = TRUE, stringsAsFactors = F)
View(df_cam)
runApp('vbsd.R')
runApp('vbsd.R')
runApp('vbsd.R')
runApp('vbsd.R')
runApp('vbsd.R')
which(grepl('', df_cam$url))
which(grepl('mjpg', df_cam$url))
which(grepl('.mjpg', df_cam$url))
which(grepl('.mjpg', df_cam$url)).length
len(which(grepl('.mjpg', df_cam$url)))
length(which(grepl('.mjpg', df_cam$url)))
runApp('vbsd.R')
w_cam <- which(grepl('.mjpg', df_cam$url))
cam <- df_cam[w_cam, c("url", "latitude", "longitude")]
View(cam)
View(cam)
cam <- cam[sample(nrow(cam), 100), ]
cam$url
cam$latitude
cam$longitude
runApp('vbsd.R')
runApp('vbsd.R')
