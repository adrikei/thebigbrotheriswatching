fs = require('fs')

bb = fs.readFileSync('./big_brother.geojson', 'utf-8')

bb = JSON.parse(bb.replace(/\n/g, ''))

bb = bb.features

all_headers = []
// bb.filter(e => e.geometry.type === 'Point')
// .map...
bb.map(e => ({...e.properties, ...e.geometry, latitude: e.geometry.coordinates[1], longitude: e.geometry.coordinates[0]})).map(e => Object.keys(e).map(k => all_headers.push(k)))

all_headers = Array.from(new Set(all_headers))

all_headers = all_headers.filter(h => !h.includes(':') || h === 'surveillance:type')
// all_headers = all_headers.filter(h => h !== '@id')
all_headers = all_headers.filter(h => h !== 'from')
all_headers = all_headers.filter(h => h !== 'authority')
all_headers = all_headers.filter(h => h !== 'museum')
all_headers = all_headers.filter(h => h !== 'guided_tours')
all_headers = all_headers.filter(h => h !== 'importance')
all_headers = all_headers.filter(h => h !== 'castle_type')
all_headers = all_headers.filter(h => h !== 'coordinates')
all_headers = all_headers.filter(h => h !== 'barrier')
// all_headers = all_headers.filter(h => h !== 'type')
all_headers = all_headers.filter(h => h !== 'man_made')
all_headers = all_headers.filter(h => h !== 'highway')
all_headers = all_headers.filter(h => h !== 'traffic_sign')
all_headers = all_headers.filter(h => h !== 'ele')
all_headers = all_headers.filter(h => h !== 'time')
all_headers = all_headers.filter(h => h !== 'bicycle')
all_headers = all_headers.filter(h => h !== 'crossing')
all_headers = all_headers.filter(h => h !== 'amenity')
all_headers = all_headers.filter(h => h !== 'brand')
all_headers = all_headers.filter(h => h !== 'opening_hours')
all_headers = all_headers.filter(h => h !== 'wheelchair')
all_headers = all_headers.filter(h => h !== 'railway')
all_headers = all_headers.filter(h => h !== 'wikidata')
all_headers = all_headers.filter(h => h !== 'operator')
all_headers = all_headers.filter(h => h !== 'check_date')
all_headers = all_headers.filter(h => h !== 'level')
all_headers = all_headers.filter(h => h !== '@relations')
all_headers = all_headers.filter(h => h !== 'alt_name')
all_headers = all_headers.filter(h => h !== 'internet_access')
all_headers = all_headers.filter(h => h !== 'building')
all_headers = all_headers.filter(h => h !== 'public_transport')
all_headers = all_headers.filter(h => h !== 'ref_name')
all_headers = all_headers.filter(h => h !== 'tram')
all_headers = all_headers.filter(h => h !== 'network')
all_headers = all_headers.filter(h => h !== 'uic_ref')
all_headers = all_headers.filter(h => h !== 'tactile_paving')
all_headers = all_headers.filter(h => h !== 'layer')
all_headers = all_headers.filter(h => h !== 'subway')
all_headers = all_headers.filter(h => h !== 'station')
all_headers = all_headers.filter(h => h !== 'light_rail')
all_headers = all_headers.filter(h => h !== 'official_name')
all_headers = all_headers.filter(h => h !== 'phone')
all_headers = all_headers.filter(h => h !== 'height')
all_headers = all_headers.filter(h => h !== 'cuisine')
all_headers = all_headers.filter(h => h !== 'takeaway')
all_headers = all_headers.filter(h => h !== 'toilets')
all_headers = all_headers.filter(h => h !== 'created_by')
all_headers = all_headers.filter(h => h !== 'email')
all_headers = all_headers.filter(h => h !== 'gauge')
all_headers = all_headers.filter(h => h !== 'usage')
all_headers = all_headers.filter(h => h !== 'source_ref')
all_headers = all_headers.filter(h => h !== 'access')
all_headers = all_headers.filter(h => h !== 'foot')
all_headers = all_headers.filter(h => h !== 'horse')
all_headers = all_headers.filter(h => h !== 'motor_vehicle')
all_headers = all_headers.filter(h => h !== 'bus')
all_headers = all_headers.filter(h => h !== 'fax')
all_headers = all_headers.filter(h => h !== 'FIXME')
all_headers = all_headers.filter(h => h !== 'dispensing')
all_headers = all_headers.filter(h => h !== 'bic')
all_headers = all_headers.filter(h => h !== 'entrance')
all_headers = all_headers.filter(h => h !== 'traffic_signals')
all_headers = all_headers.filter(h => h !== 'outdoor_seating')
all_headers = all_headers.filter(h => h !== 'route_ref')
all_headers = all_headers.filter(h => h !== 'camera')
all_headers = all_headers.filter(h => h !== 'dcc_strategic_2011')
all_headers = all_headers.filter(h => h !== 'dcc_strategic_ref')
all_headers = all_headers.filter(h => h !== 'tunnel')
all_headers = all_headers.filter(h => h !== 'lastcheck')
all_headers = all_headers.filter(h => h !== 'postal_code')
all_headers = all_headers.filter(h => h !== 'vending')
all_headers = all_headers.filter(h => h !== 'enforcement')
all_headers = all_headers.filter(h => h !== 'hazard')
all_headers = all_headers.filter(h => h !== 'capacity')
all_headers = all_headers.filter(h => h !== 'covered')
all_headers = all_headers.filter(h => h !== 'cyclestreets_id')
all_headers = all_headers.filter(h => h !== 'uic_name')
all_headers = all_headers.filter(h => h !== 'tourism')
all_headers = all_headers.filter(h => h !== 'opening_times')
all_headers = all_headers.filter(h => h !== 'local_ref')
all_headers = all_headers.filter(h => h !== 'start_date')
all_headers = all_headers.filter(h => h !== 'fee')
all_headers = all_headers.filter(h => h !== 'cycle_network')
all_headers = all_headers.filter(h => h !== 'expected_rcn_route_relations')
all_headers = all_headers.filter(h => h !== 'rcn_ref')
all_headers = all_headers.filter(h => h !== 'revolving')
all_headers = all_headers.filter(h => h !== 'atmotorway')
all_headers = all_headers.filter(h => h !== 'train')
all_headers = all_headers.filter(h => h !== 'vignette_swiss')
all_headers = all_headers.filter(h => h !== 'old_name')
all_headers = all_headers.filter(h => h !== 'angle')
all_headers = all_headers.filter(h => h !== 'drive_through')
all_headers = all_headers.filter(h => h !== 'direction')
all_headers = all_headers.filter(h => h !== 'parking')
all_headers = all_headers.filter(h => h !== 'compressed_air')
all_headers = all_headers.filter(h => h !== 'button_operated')
all_headers = all_headers.filter(h => h !== 'speech_output')
all_headers = all_headers.filter(h => h !== 'delivery')
all_headers = all_headers.filter(h => h !== 'dog')
all_headers = all_headers.filter(h => h !== 'branch')
all_headers = all_headers.filter(h => h !== 'car_sharing')
all_headers = all_headers.filter(h => h !== 'disabled')
all_headers = all_headers.filter(h => h !== 'emergency')
all_headers = all_headers.filter(h => h !== 'goods')
all_headers = all_headers.filter(h => h !== 'hgv')
all_headers = all_headers.filter(h => h !== 'motorcycle')
all_headers = all_headers.filter(h => h !== 'psv')
all_headers = all_headers.filter(h => h !== 'taxi')
all_headers = all_headers.filter(h => h !== 'disable')
all_headers = all_headers.filter(h => h !== 'motorcar')
all_headers = all_headers.filter(h => h !== 'information')
all_headers = all_headers.filter(h => h !== 'maxheight')
all_headers = all_headers.filter(h => h !== 'supervised')
all_headers = all_headers.filter(h => h !== 'landuse')
all_headers = all_headers.filter(h => h !== 'military')
all_headers = all_headers.filter(h => h !== 'radar')
all_headers = all_headers.filter(h => h !== 'fixme')
all_headers = all_headers.filter(h => h !== 'car_wash')
all_headers = all_headers.filter(h => h !== 'leisure')
all_headers = all_headers.filter(h => h !== 'indoor')
all_headers = all_headers.filter(h => h !== 'tenant')
all_headers = all_headers.filter(h => h !== 'second_hand')
all_headers = all_headers.filter(h => h !== 'office')
all_headers = all_headers.filter(h => h !== 'seating')
all_headers = all_headers.filter(h => h !== 'location')
all_headers = all_headers.filter(h => h !== 'organic')
all_headers = all_headers.filter(h => h !== 'support')
all_headers = all_headers.filter(h => h !== 'healthcare')
all_headers = all_headers.filter(h => h !== 'bicycle_parking')
all_headers = all_headers.filter(h => h !== 'supermarket')
all_headers = all_headers.filter(h => h !== 'ethanol')
all_headers = all_headers.filter(h => h !== 'collection_times')
all_headers = all_headers.filter(h => h !== 'maxspeed')
all_headers = all_headers.filter(h => h !== 'stars')
all_headers = all_headers.filter(h => h !== 'looking')
all_headers = all_headers.filter(h => h !== 'lit')
all_headers = all_headers.filter(h => h !== 'surface')
all_headers = all_headers.filter(h => h !== 'is_in')
all_headers = all_headers.filter(h => h !== 'designation')
all_headers = all_headers.filter(h => h !== 'microbrewery')
all_headers = all_headers.filter(h => h !== 'drive_in')
all_headers = all_headers.filter(h => h !== 'clothes')
all_headers = all_headers.filter(h => h !== 'park_ride')
all_headers = all_headers.filter(h => h !== 'last_checked')
all_headers = all_headers.filter(h => h !== 'power_input')
all_headers = all_headers.filter(h => h !== 'provides')
all_headers = all_headers.filter(h => h !== 'amenity_1')
all_headers = all_headers.filter(h => h !== 'loc_name')
all_headers = all_headers.filter(h => h !== 'phone_1')
all_headers = all_headers.filter(h => h !== 'food')
all_headers = all_headers.filter(h => h !== 'car')
all_headers = all_headers.filter(h => h !== 'short_name')
all_headers = all_headers.filter(h => h !== 'service')
all_headers = all_headers.filter(h => h !== 'maxwidth')
all_headers = all_headers.filter(h => h !== 'brewery')
all_headers = all_headers.filter(h => h !== 'repair')
all_headers = all_headers.filter(h => h !== 'power')
all_headers = all_headers.filter(h => h !== 'typech')
all_headers = all_headers.filter(h => h !== 'update')
all_headers = all_headers.filter(h => h !== 'shelter')
all_headers = all_headers.filter(h => h !== 'leaf_cycle')
all_headers = all_headers.filter(h => h !== 'leaf_type')
all_headers = all_headers.filter(h => h !== 'natural')
all_headers = all_headers.filter(h => h !== 'country')
all_headers = all_headers.filter(h => h !== 'diplomatic')
all_headers = all_headers.filter(h => h !== 'bus_routes')
all_headers = all_headers.filter(h => h !== 'status')
all_headers = all_headers.filter(h => h !== 'price')
all_headers = all_headers.filter(h => h !== 'unisex')
all_headers = all_headers.filter(h => h !== 'count')
all_headers = all_headers.filter(h => h !== 'free_refill')
all_headers = all_headers.filter(h => h !== 'gambling')
all_headers = all_headers.filter(h => h !== 'noexit')
all_headers = all_headers.filter(h => h !== 'automated')
all_headers = all_headers.filter(h => h !== 'maxstay')
all_headers = all_headers.filter(h => h !== 'min_age')
all_headers = all_headers.filter(h => h !== 'crossing_ref')
all_headers = all_headers.filter(h => h !== 'number')
all_headers = all_headers.filter(h => h !== 'sport')
all_headers = all_headers.filter(h => h !== 'traffic_calming')
all_headers = all_headers.filter(h => h !== 'wifi')
all_headers = all_headers.filter(h => h !== 'accuracy')
all_headers = all_headers.filter(h => h !== 'operator_2')
all_headers = all_headers.filter(h => h !== 'maxfee')
all_headers = all_headers.filter(h => h !== 'speech_input')
all_headers = all_headers.filter(h => h !== 'mapillary')
all_headers = all_headers.filter(h => h !== 'handrail')
all_headers = all_headers.filter(h => h !== 'manufacturer')
all_headers = all_headers.filter(h => h !== 'stroller')
all_headers = all_headers.filter(h => h !== 'levels')
all_headers = all_headers.filter(h => h !== 'breakfast')
all_headers = all_headers.filter(h => h !== 'ID_SLH_IMPORT')
all_headers = all_headers.filter(h => h !== 'vehicle')
all_headers = all_headers.filter(h => h !== 'speed_camera')
all_headers = all_headers.filter(h => h !== 'commune')
all_headers = all_headers.filter(h => h !== 'tag')
all_headers = all_headers.filter(h => h !== 'level_crossing')
all_headers = all_headers.filter(h => h !== 'ice_cream')
all_headers = all_headers.filter(h => h !== 'weather_protection')
all_headers = all_headers.filter(h => h !== 'date')
all_headers = all_headers.filter(h => h !== 'display')
all_headers = all_headers.filter(h => h !== 'maxweight')
all_headers = all_headers.filter(h => h !== 'year_of_construction')
all_headers = all_headers.filter(h => h !== 'stationery')
all_headers = all_headers.filter(h => h !== 'old_operator')
all_headers = all_headers.filter(h => h !== 'owner')
all_headers = all_headers.filter(h => h !== 'model')
all_headers = all_headers.filter(h => h !== 'old_ref')
all_headers = all_headers.filter(h => h !== 'recycling_type')
all_headers = all_headers.filter(h => h !== 'self_service')
all_headers = all_headers.filter(h => h !== 'station_id')
all_headers = all_headers.filter(h => h !== 'colour')
all_headers = all_headers.filter(h => h !== 'material')
all_headers = all_headers.filter(h => h !== 'gluten_free')
all_headers = all_headers.filter(h => h !== 'ownership')
all_headers = all_headers.filter(h => h !== 'allocation')
all_headers = all_headers.filter(h => h !== 'tobacco')
all_headers = all_headers.filter(h => h !== 'aerialway')
all_headers = all_headers.filter(h => h !== 'visibility')
all_headers = all_headers.filter(h => h !== 'lamp_type')
all_headers = all_headers.filter(h => h !== 'closest_town')
all_headers = all_headers.filter(h => h !== 'course')
all_headers = all_headers.filter(h => h !== 'subway_entrance')
all_headers = all_headers.filter(h => h !== 'WebCam LIVE')
all_headers = all_headers.filter(h => h !== 'facebook')
all_headers = all_headers.filter(h => h !== 'last_check')
all_headers = all_headers.filter(h => h !== 'outdoor')
all_headers = all_headers.filter(h => h !== 'wlan')
all_headers = all_headers.filter(h => h !== 'dogs')
all_headers = all_headers.filter(h => h !== 'disused')
all_headers = all_headers.filter(h => h !== 'groundanchor')
all_headers = all_headers.filter(h => h !== 'surveillance_1')
all_headers = all_headers.filter(h => h !== 'link')
all_headers = all_headers.filter(h => h !== 'trailer')
all_headers = all_headers.filter(h => h !== 'fair_trade')
all_headers = all_headers.filter(h => h !== 'diaper')
all_headers = all_headers.filter(h => h !== 'scooter')
all_headers = all_headers.filter(h => h !== 'seasonal')
all_headers = all_headers.filter(h => h !== 'service_times')
all_headers = all_headers.filter(h => h !== 'Typ')
all_headers = all_headers.filter(h => h !== 'sausage')
all_headers = all_headers.filter(h => h !== 'other')
all_headers = all_headers.filter(h => h !== 'quantity')
all_headers = all_headers.filter(h => h !== 'platforms')
all_headers = all_headers.filter(h => h !== 'postcode')
all_headers = all_headers.filter(h => h !== 'hide')
all_headers = all_headers.filter(h => h !== 'cash_in')
all_headers = all_headers.filter(h => h !== 'src')
all_headers = all_headers.filter(h => h !== 'lit_by_gaslight')
all_headers = all_headers.filter(h => h !== 'sym')
all_headers = all_headers.filter(h => h !== 'street_lamp')
all_headers = all_headers.filter(h => h !== 'photo')
all_headers = all_headers.filter(h => h !== 'admin_ref')
all_headers = all_headers.filter(h => h !== 'description_location')
all_headers = all_headers.filter(h => h !== 'alcohol')
all_headers = all_headers.filter(h => h !== 'only_object')
all_headers = all_headers.filter(h => h !== 'day_off')
all_headers = all_headers.filter(h => h !== 'day_on')
all_headers = all_headers.filter(h => h !== 'craft')
all_headers = all_headers.filter(h => h !== 'kitchen_hours')
all_headers = all_headers.filter(h => h !== 'tactile_writing')
all_headers = all_headers.filter(h => h !== 'mount')
all_headers = all_headers.filter(h => h !== 'opening_hours_1')
all_headers = all_headers.filter(h => h !== 'elevator')
all_headers = all_headers.filter(h => h !== 'amperage')
all_headers = all_headers.filter(h => h !== 'voltage')
all_headers = all_headers.filter(h => h !== 'int_name')
all_headers = all_headers.filter(h => h !== 'make')
all_headers = all_headers.filter(h => h !== 'birds_nest')
all_headers = all_headers.filter(h => h !== 'nest_mount')
all_headers = all_headers.filter(h => h !== 'nest_platform')
all_headers = all_headers.filter(h => h !== 'social_facility')
all_headers = all_headers.filter(h => h !== 'moped')
all_headers = all_headers.filter(h => h !== 'todo')
all_headers = all_headers.filter(h => h !== 'cafe')
all_headers = all_headers.filter(h => h !== 'indoor_seating')
all_headers = all_headers.filter(h => h !== 'historic')
all_headers = all_headers.filter(h => h !== 'board_type')
all_headers = all_headers.filter(h => h !== 'distance')
all_headers = all_headers.filter(h => h !== 'lamp_operator')
all_headers = all_headers.filter(h => h !== 'lamp_ref')
all_headers = all_headers.filter(h => h !== 'lamp_ref_1')
all_headers = all_headers.filter(h => h !== 'bench')
all_headers = all_headers.filter(h => h !== 'waste_basket')
all_headers = all_headers.filter(h => h !== 'beauty')
all_headers = all_headers.filter(h => h !== 'interval')
all_headers = all_headers.filter(h => h !== 'source_1')
all_headers = all_headers.filter(h => h !== 'TODO')
all_headers = all_headers.filter(h => h !== 'collector')
all_headers = all_headers.filter(h => h !== 'hiking')
all_headers = all_headers.filter(h => h !== 'est_height')
all_headers = all_headers.filter(h => h !== 'astronomy')
all_headers = all_headers.filter(h => h !== 'push_button')
all_headers = all_headers.filter(h => h !== 'floor')
all_headers = all_headers.filter(h => h !== 'end_date')
all_headers = all_headers.filter(h => h !== 'emergency_phone')
all_headers = all_headers.filter(h => h !== 'tracks')
all_headers = all_headers.filter(h => h !== 'funicular')
all_headers = all_headers.filter(h => h !== 'kerb')
all_headers = all_headers.filter(h => h !== 'image_2')
all_headers = all_headers.filter(h => h !== 'smoothness')
all_headers = all_headers.filter(h => h !== 'light_source')
all_headers = all_headers.filter(h => h !== 'purpose')
all_headers = all_headers.filter(h => h !== 'contact')
all_headers = all_headers.filter(h => h !== 'denomination')
all_headers = all_headers.filter(h => h !== 'religion')
all_headers = all_headers.filter(h => h !== 'advertising')
all_headers = all_headers.filter(h => h !== 'pastry_shop')
all_headers = all_headers.filter(h => h !== 'length')
all_headers = all_headers.filter(h => h !== 'hei')
all_headers = all_headers.filter(h => h !== 'place')
all_headers = all_headers.filter(h => h !== 'survey_date')
all_headers = all_headers.filter(h => h !== 'lamp_mount')
all_headers = all_headers.filter(h => h !== 'highway_1')
all_headers = all_headers.filter(h => h !== 'incline')
all_headers = all_headers.filter(h => h !== 'milk')
all_headers = all_headers.filter(h => h !== 'sauna')
all_headers = all_headers.filter(h => h !== 'backrest')
all_headers = all_headers.filter(h => h !== 'street_cabinet')
all_headers = all_headers.filter(h => h !== 'charge')
all_headers = all_headers.filter(h => h !== 'furniture')
all_headers = all_headers.filter(h => h !== 'creator')
all_headers = all_headers.filter(h => h !== 'dummy')
all_headers = all_headers.filter(h => h !== 'club')
all_headers = all_headers.filter(h => h !== 'transformer')
all_headers = all_headers.filter(h => h !== 'hashtag')
all_headers = all_headers.filter(h => h !== 'description_1')
all_headers = all_headers.filter(h => h !== 'fake')
all_headers = all_headers.filter(h => h !== 'infrared')
all_headers = all_headers.filter(h => h !== 'features')
all_headers = all_headers.filter(h => h !== 'installed')
all_headers = all_headers.filter(h => h !== 'male')
all_headers = all_headers.filter(h => h !== 'inscription')
all_headers = all_headers.filter(h => h !== 'mobile')
all_headers = all_headers.filter(h => h !== 'operator_1')
all_headers = all_headers.filter(h => h !== 'operator_type')
all_headers = all_headers.filter(h => h !== 'drinking_water')
all_headers = all_headers.filter(h => h !== 'power_supply')
all_headers = all_headers.filter(h => h !== 'sanitary_dump_station')
all_headers = all_headers.filter(h => h !== 'inline_skates')
all_headers = all_headers.filter(h => h !== 'legal')
all_headers = all_headers.filter(h => h !== 'hight')
all_headers = all_headers.filter(h => h !== 'design')
all_headers = all_headers.filter(h => h !== 'min_height')
all_headers = all_headers.filter(h => h !== 'fridge')
all_headers = all_headers.filter(h => h !== 'max_level')
all_headers = all_headers.filter(h => h !== 'min_level')
all_headers = all_headers.filter(h => h !== 'frequency')
all_headers = all_headers.filter(h => h !== 'substation')
all_headers = all_headers.filter(h => h !== 'rooms')
all_headers = all_headers.filter(h => h !== 'iconic')
all_headers = all_headers.filter(h => h !== 'management_region')
all_headers = all_headers.filter(h => h !== 'camper')
all_headers = all_headers.filter(h => h !== 'government')
all_headers = all_headers.filter(h => h !== 'fence_type')
all_headers = all_headers.filter(h => h !== 'target')
all_headers = all_headers.filter(h => h !== 'deanery')
all_headers = all_headers.filter(h => h !== 'diocese')
all_headers = all_headers.filter(h => h !== 'parish')
all_headers = all_headers.filter(h => h !== 'kiosk')
all_headers = all_headers.filter(h => h !== 'voltage-low')
all_headers = all_headers.filter(h => h !== 'geb_nr')
all_headers = all_headers.filter(h => h !== 'subject')
all_headers = all_headers.filter(h => h !== 'lockers')
all_headers = all_headers.filter(h => h !== 'fenced')
all_headers = all_headers.filter(h => h !== 'faculty')
all_headers = all_headers.filter(h => h !== 'research_institution')
all_headers = all_headers.filter(h => h !== 'megalith_type')
all_headers = all_headers.filter(h => h !== 'ruins')
all_headers = all_headers.filter(h => h !== 'site_type')
all_headers = all_headers.filter(h => h !== 'wall')
all_headers = all_headers.filter(h => h !== 'rollerskates')
all_headers = all_headers.filter(h => h !== 'noaddress')
all_headers = all_headers.filter(h => h !== 'aeroway')
all_headers = all_headers.filter(h => h !== 'iata')
all_headers = all_headers.filter(h => h !== 'icao')
all_headers = all_headers.filter(h => h !== 'commercial')
all_headers = all_headers.filter(h => h !== 'oneway')
all_headers = all_headers.filter(h => h !== 'cadastre')
all_headers = all_headers.filter(h => h !== 'bin')
all_headers = all_headers.filter(h => h !== 'waterway')
all_headers = all_headers.filter(h => h !== 'kids_area')
all_headers = all_headers.filter(h => h !== 'air_conditioning')
all_headers = all_headers.filter(h => h !== 'condition')
all_headers = all_headers.filter(h => h !== 'rental')
all_headers = all_headers.filter(h => h !== 'bike_ride')
all_headers = all_headers.filter(h => h !== 'room')
all_headers = all_headers.filter(h => h !== 'passenger_information_display')
all_headers = all_headers.filter(h => h !== 'boundary')
all_headers = all_headers.filter(h => h !== 'levelpart')
all_headers = all_headers.filter(h => h !== 'locked')
all_headers = all_headers.filter(h => h !== 'post_office')
all_headers = all_headers.filter(h => h !== 'telecom')
all_headers = all_headers.filter(h => h !== 'caravans')
all_headers = all_headers.filter(h => h !== 'tents')
all_headers = all_headers.filter(h => h !== 'seats')
all_headers = all_headers.filter(h => h !== 'car_repair')
all_headers = all_headers.filter(h => h !== 'library')
all_headers = all_headers.filter(h => h !== 'university')
all_headers = all_headers.filter(h => h !== 'lunch')
all_headers = all_headers.filter(h => h !== 'max_age')
all_headers = all_headers.filter(h => h !== 'shelter_type')
all_headers = all_headers.filter(h => h !== 'female')
all_headers = all_headers.filter(h => h !== 'fuel')
all_headers = all_headers.filter(h => h !== 'restaurant')
all_headers = all_headers.filter(h => h !== 'shower')
all_headers = all_headers.filter(h => h !== 'origin')
all_headers = all_headers.filter(h => h !== 'note_1')
all_headers = all_headers.filter(h => h !== 'wholesale')
all_headers = all_headers.filter(h => h !== 'lotto')
all_headers = all_headers.filter(h => h !== 'heated')
all_headers = all_headers.filter(h => h !== 'pipeline')
all_headers = all_headers.filter(h => h !== 'substance')
all_headers = all_headers.filter(h => h !== 'lanes')
all_headers = all_headers.filter(h => h !== 'motorroad')
all_headers = all_headers.filter(h => h !== 'overtaking')
all_headers = all_headers.filter(h => h !== 'width')
all_headers = all_headers.filter(h => h !== 'cycleway')
all_headers = all_headers.filter(h => h !== 'rcn')
all_headers = all_headers.filter(h => h !== 'ft_link')
all_headers = all_headers.filter(h => h !== 'agricultural')
all_headers = all_headers.filter(h => h !== 'bdouble')
all_headers = all_headers.filter(h => h !== 'destination')
all_headers = all_headers.filter(h => h !== 'int_ref')
all_headers = all_headers.filter(h => h !== 'shoulder')
all_headers = all_headers.filter(h => h !== 'bridge')
all_headers = all_headers.filter(h => h !== 'segregated')
all_headers = all_headers.filter(h => h !== 'lcn')
all_headers = all_headers.filter(h => h !== 'is_sidepath')
all_headers = all_headers.filter(h => h !== 'step_count')
all_headers = all_headers.filter(h => h !== 'toll')
all_headers = all_headers.filter(h => h !== 'criminality_tax')
all_headers = all_headers.filter(h => h !== 'speed_tax')
all_headers = all_headers.filter(h => h !== 'tracktype')
all_headers = all_headers.filter(h => h !== 'sidewalk')
all_headers = all_headers.filter(h => h !== 'admin_level')
all_headers = all_headers.filter(h => h !== 'border_type')
all_headers = all_headers.filter(h => h !== 'boundary_type')
all_headers = all_headers.filter(h => h !== 'footway')
all_headers = all_headers.filter(h => h !== 'local_code')
all_headers = all_headers.filter(h => h !== 'priority_road')
all_headers = all_headers.filter(h => h !== 'tmc')
all_headers = all_headers.filter(h => h !== 'placement')
all_headers = all_headers.filter(h => h !== 'bridge_name')
all_headers = all_headers.filter(h => h !== 'embankment')
all_headers = all_headers.filter(h => h !== 'ramp')
all_headers = all_headers.filter(h => h !== 'conveying')
all_headers = all_headers.filter(h => h !== 'old_railway_operator')
all_headers = all_headers.filter(h => h !== 'intermittent')
all_headers = all_headers.filter(h => h !== 'ref')
all_headers = all_headers.filter(h => h !== 'route')
all_headers = all_headers.filter(h => h !== 'twitter')
all_headers = all_headers.filter(h => h !== 'telegram')
all_headers = all_headers.filter(h => h !== 'to')
all_headers = all_headers.filter(h => h !== 'type')
all_headers = all_headers.filter(h => h !== 'atm')
all_headers = all_headers.filter(h => h !== 'area')
all_headers = all_headers.filter(h => h !== 'architect')
all_headers = all_headers.filter(h => h !== 'local_name')
all_headers = all_headers.filter(h => h !== 'name_1')
all_headers = all_headers.filter(h => h !== 'heritage')
all_headers = all_headers.filter(h => h !== 'smoking')
all_headers = all_headers.filter(h => h !== 'source')
all_headers = all_headers.filter(h => h !== 'source_url')
all_headers = all_headers.filter(h => h !== '')
all_headers = all_headers.filter(h => h !== '')


l = bb.filter(e => e.geometry.type === 'Point').map(e => ({...e.properties, ...e.geometry, latitude: e.geometry.coordinates[1], longitude: e.geometry.coordinates[0]}))

matrix = l.map(e => all_headers.map(h => e[h]||''))

wiki_index = all_headers.indexOf('wikipedia')
website_index = all_headers.indexOf('website')
image_index = all_headers.indexOf('image')
url_index = all_headers.indexOf('url')

note_index = all_headers.indexOf('note')
comment_index = all_headers.indexOf('comment')
comment_1_index = all_headers.indexOf('comment_1')

description_index = all_headers.indexOf('description')

for(i = 0; i < matrix.length; i++){
    // website
    if(matrix[i][wiki_index] && !matrix[i][website_index] ){
        splitted = matrix[i][wiki_index].split(':')
        lang = splitted[0]
        article = splitted[1].replace(/ /g, '_')
        matrix[i][website_index] = `https://${lang}.wikipedia.org/wiki/${article}`
        // console.log(`https://${lang}.wikipedia.org/wiki/${article}`)
    }
    if(matrix[i][image_index] && !matrix[i][website_index] ){
        matrix[i][website_index] = matrix[i][image_index]
    }
    if(matrix[i][url_index] && !matrix[i][website_index] ){
        matrix[i][website_index] = matrix[i][url_index]
    }
    // note
    if(matrix[i][comment_index] && !matrix[i][note_index] ){
        matrix[i][note_index] = matrix[i][url_index]
    }
    if(matrix[i][comment_1_index] && !matrix[i][note_index] ){
        matrix[i][note_index] = matrix[i][url_index]
    }
    if(matrix[i][note_index] && !matrix[i][note_index] ){
        matrix[i][note_index] = matrix[i][url_index]
    }
}

filename = 'csv.csv'

fs.writeFileSync(filename, all_headers.join('\t')+'\n')
matrix.map(row => fs.appendFileSync(filename, row.join('\t')+'\n'))
